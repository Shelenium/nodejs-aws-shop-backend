"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductsServiceStack = void 0;
const aws_cdk_lib_1 = require("aws-cdk-lib");
const lambda = require("aws-cdk-lib/aws-lambda");
const apigateway = require("aws-cdk-lib/aws-apigateway");
const configs_1 = require("../configs");
class ProductsServiceStack extends aws_cdk_lib_1.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        const productsList = new lambda.Function(this, 'ProductsList', {
            runtime: lambda.Runtime.NODEJS_20_X,
            handler: 'products-list.handler',
            code: lambda.Code.fromAsset('./dist/product_service/handlers'),
        });
        const productById = new lambda.Function(this, 'ProductById', {
            runtime: lambda.Runtime.NODEJS_20_X,
            handler: 'product-by-id.handler',
            code: lambda.Code.fromAsset('./dist/product_service/handlers'),
        });
        const api = new apigateway.RestApi(this, 'ProductsServiceApi', {
            restApiName: 'Products Service API',
            defaultCorsPreflightOptions: configs_1.defaultCorsPreflightOptions,
        });
        const productsResource = api.root.addResource('products');
        const productIdResource = productsResource.addResource('{productId}');
        productsResource.addMethod('GET', new apigateway.LambdaIntegration(productsList), (0, configs_1.getCorsMethodOptions)());
        productIdResource.addMethod('PUT', new apigateway.LambdaIntegration(productById), (0, configs_1.getCorsMethodOptions)());
        productIdResource.addMethod('POST', new apigateway.LambdaIntegration(productById), (0, configs_1.getCorsMethodOptions)());
        productIdResource.addMethod('DELETE', new apigateway.LambdaIntegration(productById), (0, configs_1.getCorsMethodOptions)());
        productIdResource.addMethod('GET', new apigateway.LambdaIntegration(productById), (0, configs_1.getCorsMethodOptions)());
    }
}
exports.ProductsServiceStack = ProductsServiceStack;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdHMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm9kdWN0X3NlcnZpY2UvbGFtYmRhcy9wcm9kdWN0cy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZDQUFnRDtBQUVoRCxpREFBaUQ7QUFDakQseURBQXlEO0FBQ3pELHdDQUErRTtBQUUvRSxNQUFhLG9CQUFxQixTQUFRLG1CQUFLO0lBQzdDLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBa0I7UUFDMUQsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFeEIsTUFBTSxZQUFZLEdBQUcsSUFBSSxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxjQUFjLEVBQUU7WUFDN0QsT0FBTyxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBVztZQUNuQyxPQUFPLEVBQUUsdUJBQXVCO1lBQ2hDLElBQUksRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxpQ0FBaUMsQ0FBQztTQUMvRCxDQUFDLENBQUM7UUFFSCxNQUFNLFdBQVcsR0FBRyxJQUFJLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLGFBQWEsRUFBRTtZQUMzRCxPQUFPLEVBQUUsTUFBTSxDQUFDLE9BQU8sQ0FBQyxXQUFXO1lBQ25DLE9BQU8sRUFBRSx1QkFBdUI7WUFDaEMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGlDQUFpQyxDQUFDO1NBQy9ELENBQUMsQ0FBQztRQUVILE1BQU0sR0FBRyxHQUFHLElBQUksVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsb0JBQW9CLEVBQUU7WUFDN0QsV0FBVyxFQUFFLHNCQUFzQjtZQUNqQywyQkFBMkIsRUFBM0IscUNBQTJCO1NBQzlCLENBQUMsQ0FBQztRQUVILE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDMUQsTUFBTSxpQkFBaUIsR0FBRyxnQkFBZ0IsQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDLENBQUM7UUFFdEUsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxJQUFJLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFBLDhCQUFvQixHQUFFLENBQUMsQ0FBQztRQUUxRyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksVUFBVSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxFQUFFLElBQUEsOEJBQW9CLEdBQUUsQ0FBQyxDQUFDO1FBQzFHLGlCQUFpQixDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxVQUFVLENBQUMsaUJBQWlCLENBQUMsV0FBVyxDQUFDLEVBQUUsSUFBQSw4QkFBb0IsR0FBRSxDQUFDLENBQUM7UUFDM0csaUJBQWlCLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxJQUFJLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLENBQUMsRUFBRSxJQUFBLDhCQUFvQixHQUFFLENBQUMsQ0FBQztRQUM3RyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksVUFBVSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxFQUFFLElBQUEsOEJBQW9CLEdBQUUsQ0FBQyxDQUFDO0lBQzVHLENBQUM7Q0FDRjtBQS9CRCxvREErQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGFjaywgU3RhY2tQcm9wcyB9IGZyb20gJ2F3cy1jZGstbGliJztcclxuaW1wb3J0IHsgQ29uc3RydWN0IH0gZnJvbSAnY29uc3RydWN0cyc7XHJcbmltcG9ydCAqIGFzIGxhbWJkYSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtbGFtYmRhJztcclxuaW1wb3J0ICogYXMgYXBpZ2F0ZXdheSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtYXBpZ2F0ZXdheSc7XHJcbmltcG9ydCB7IGRlZmF1bHRDb3JzUHJlZmxpZ2h0T3B0aW9ucywgZ2V0Q29yc01ldGhvZE9wdGlvbnMgfSBmcm9tICcuLi9jb25maWdzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBQcm9kdWN0c1NlcnZpY2VTdGFjayBleHRlbmRzIFN0YWNrIHtcclxuICBjb25zdHJ1Y3RvcihzY29wZTogQ29uc3RydWN0LCBpZDogc3RyaW5nLCBwcm9wcz86IFN0YWNrUHJvcHMpIHtcclxuICAgIHN1cGVyKHNjb3BlLCBpZCwgcHJvcHMpO1xyXG5cclxuICAgIGNvbnN0IHByb2R1Y3RzTGlzdCA9IG5ldyBsYW1iZGEuRnVuY3Rpb24odGhpcywgJ1Byb2R1Y3RzTGlzdCcsIHtcclxuICAgICAgcnVudGltZTogbGFtYmRhLlJ1bnRpbWUuTk9ERUpTXzIwX1gsXHJcbiAgICAgIGhhbmRsZXI6ICdwcm9kdWN0cy1saXN0LmhhbmRsZXInLFxyXG4gICAgICBjb2RlOiBsYW1iZGEuQ29kZS5mcm9tQXNzZXQoJy4vZGlzdC9wcm9kdWN0X3NlcnZpY2UvaGFuZGxlcnMnKSxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHByb2R1Y3RCeUlkID0gbmV3IGxhbWJkYS5GdW5jdGlvbih0aGlzLCAnUHJvZHVjdEJ5SWQnLCB7XHJcbiAgICAgIHJ1bnRpbWU6IGxhbWJkYS5SdW50aW1lLk5PREVKU18yMF9YLFxyXG4gICAgICBoYW5kbGVyOiAncHJvZHVjdC1ieS1pZC5oYW5kbGVyJyxcclxuICAgICAgY29kZTogbGFtYmRhLkNvZGUuZnJvbUFzc2V0KCcuL2Rpc3QvcHJvZHVjdF9zZXJ2aWNlL2hhbmRsZXJzJyksXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBhcGkgPSBuZXcgYXBpZ2F0ZXdheS5SZXN0QXBpKHRoaXMsICdQcm9kdWN0c1NlcnZpY2VBcGknLCB7XHJcbiAgICAgIHJlc3RBcGlOYW1lOiAnUHJvZHVjdHMgU2VydmljZSBBUEknLFxyXG4gICAgICAgIGRlZmF1bHRDb3JzUHJlZmxpZ2h0T3B0aW9ucyxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHByb2R1Y3RzUmVzb3VyY2UgPSBhcGkucm9vdC5hZGRSZXNvdXJjZSgncHJvZHVjdHMnKTtcclxuICAgIGNvbnN0IHByb2R1Y3RJZFJlc291cmNlID0gcHJvZHVjdHNSZXNvdXJjZS5hZGRSZXNvdXJjZSgne3Byb2R1Y3RJZH0nKTtcclxuXHJcbiAgICBwcm9kdWN0c1Jlc291cmNlLmFkZE1ldGhvZCgnR0VUJywgbmV3IGFwaWdhdGV3YXkuTGFtYmRhSW50ZWdyYXRpb24ocHJvZHVjdHNMaXN0KSwgZ2V0Q29yc01ldGhvZE9wdGlvbnMoKSk7XHJcblxyXG4gICAgcHJvZHVjdElkUmVzb3VyY2UuYWRkTWV0aG9kKCdQVVQnLCBuZXcgYXBpZ2F0ZXdheS5MYW1iZGFJbnRlZ3JhdGlvbihwcm9kdWN0QnlJZCksIGdldENvcnNNZXRob2RPcHRpb25zKCkpO1xyXG4gICAgcHJvZHVjdElkUmVzb3VyY2UuYWRkTWV0aG9kKCdQT1NUJywgbmV3IGFwaWdhdGV3YXkuTGFtYmRhSW50ZWdyYXRpb24ocHJvZHVjdEJ5SWQpLCBnZXRDb3JzTWV0aG9kT3B0aW9ucygpKTtcclxuICAgIHByb2R1Y3RJZFJlc291cmNlLmFkZE1ldGhvZCgnREVMRVRFJywgbmV3IGFwaWdhdGV3YXkuTGFtYmRhSW50ZWdyYXRpb24ocHJvZHVjdEJ5SWQpLCBnZXRDb3JzTWV0aG9kT3B0aW9ucygpKTtcclxuICAgIHByb2R1Y3RJZFJlc291cmNlLmFkZE1ldGhvZCgnR0VUJywgbmV3IGFwaWdhdGV3YXkuTGFtYmRhSW50ZWdyYXRpb24ocHJvZHVjdEJ5SWQpLCBnZXRDb3JzTWV0aG9kT3B0aW9ucygpKTtcclxuICB9XHJcbn0iXX0=